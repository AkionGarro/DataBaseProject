/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.View;

import com.Controllers.Controller_History_appuserxbuysale;
import com.Controllers.Controller_Main;
import com.Controllers.Controller_PaymentMethod;
import com.Controllers.Controller_Shcart_appuserxclock;
import com.Controllers.Controller_ShippingMethod;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.TableModel;

/**
 *
 * @author garroakion
 */
public class carritoCompra extends javax.swing.JPanel {

    /**
     * Creates new form carritoCompra
     */
    
    private Controller_Main mainCont = Controller_Main.getContMain();
    private Controller_History_appuserxbuysale controllerBuyClock;
    private Controller_Shcart_appuserxclock controllerShCart;
    private Controller_ShippingMethod controllerShippingMethod;
    private Controller_PaymentMethod controllerPaymentMethod;
    
    public carritoCompra() {
        initComponents();
        controllerBuyClock=mainCont.getContBuyClock();
        controllerShCart=mainCont.getContShCart();
        controllerShippingMethod=mainCont.getContShippingMethod();
        controllerPaymentMethod=mainCont.getContPaymentMethod();
        fillTable();
        fillShippingMethod();
        fillPaymentMethod();
        calcTotal();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        totalLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableInfo = new javax.swing.JTable(){
            private static final long serialVersionUID = 1L;

            public boolean isCellEditable(int row, int column) {
                return false;
            };};
            deleteShCart = new javax.swing.JButton();
            buyButton1 = new javax.swing.JButton();
            comboShipping = new javax.swing.JComboBox<>();
            comboPayment = new javax.swing.JComboBox<>();
            jLabel1 = new javax.swing.JLabel();
            jLabel2 = new javax.swing.JLabel();
            jLabel3 = new javax.swing.JLabel();
            jLabel4 = new javax.swing.JLabel();

            setBackground(new java.awt.Color(255, 255, 255));
            setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            totalLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
            totalLabel.setText("0");
            add(totalLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 530, 10, -1));

            tableInfo.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
            ));
            tableInfo.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tableInfoMouseClicked(evt);
                }
            });
            jScrollPane2.setViewportView(tableInfo);

            add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 730, 550));

            deleteShCart.setText("Take out");
            deleteShCart.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    deleteShCartActionPerformed(evt);
                }
            });
            add(deleteShCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 80, 40));

            buyButton1.setText("BUY");
            buyButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    buyButton1ActionPerformed(evt);
                }
            });
            add(buyButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 80, 40));

            comboShipping.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
            add(comboShipping, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 110, 40));

            comboPayment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
            add(comboPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, 110, 40));

            jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
            jLabel1.setText("Total");
            add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 530, -1, -1));

            jLabel2.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
            jLabel2.setForeground(new java.awt.Color(0, 0, 0));
            jLabel2.setText("Select Payment Method");
            add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

            jLabel3.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
            jLabel3.setForeground(new java.awt.Color(0, 0, 0));
            jLabel3.setText("Select Shipping");
            add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

            jLabel4.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
            jLabel4.setForeground(new java.awt.Color(0, 0, 0));
            jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel4.setText("My Shopping Cart");
            add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, -1));
        }// </editor-fold>//GEN-END:initComponents

    private void buyButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButton1ActionPerformed
        try {
            if (this.tableInfo.getSelectedRow()!=-1) {
                mainCont.createWindowMessage(controllerBuyClock.buyClock(mainCont.getUsername(),Integer.parseInt(tableInfo.getValueAt(tableInfo.getSelectedRow(),0).toString()),
                    this.comboPayment.getSelectedItem().toString(), this.comboShipping.getSelectedItem().toString()), "Clock Acquired");
            fillTable();
            calcTotal();

        } else {
            mainCont.createWindowMessage("Missing data", "Blank Fields");
        }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_buyButton1ActionPerformed

    private void deleteShCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteShCartActionPerformed
                           try{
            if (tableInfo.getSelectedRow()!=-1){
                mainCont.createWindowMessage(this.controllerShCart.deleteT(this.mainCont.getUsername(),this.tableInfo.getValueAt(tableInfo.getSelectedRow(), 0).toString()), "Drop from shopping cart");
                fillTable();

            }
            else {mainCont.createWindowMessage("Missing data", "Blank Fields");
            }
        }
        catch(Exception e){
            System.out.println(e.toString());
        }  
    }//GEN-LAST:event_deleteShCartActionPerformed

    private void tableInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableInfoMouseClicked
       if (evt.getClickCount() == 2 && tableInfo.getSelectedRow() != -1) {
            ProductInformation pi = new ProductInformation();
        pi.setVisible(true);
        pi.pack();

        int selectedRow = tableInfo.getSelectedRow();
        TableModel tm = tableInfo.getModel();

        String idbuysale = tm.getValueAt(selectedRow, 0).toString();
        String datepost = tm.getValueAt(selectedRow, 1).toString();
        String username = tm.getValueAt(selectedRow, 2).toString();
        String nametype = tm.getValueAt(selectedRow, 3).toString();
        String namebrand = tm.getValueAt(selectedRow, 4).toString();
        String namemodel = tm.getValueAt(selectedRow, 5).toString();
        String namecondition = tm.getValueAt(selectedRow, 6).toString();
        String manufacturedate = tm.getValueAt(selectedRow, 7).toString();
        String descriptionclock = tm.getValueAt(selectedRow, 8).toString();
        String price = tm.getValueAt(selectedRow, 9).toString();

        // ImageIcon img = (ImageIcon) tm.getValueAt(selectedRow, 5);
        pi.productInfoId.setText(idbuysale);
        pi.productInfoPosted.setText(datepost);
        pi.productInfoBy.setText(username);
        pi.productInfoType.setText(nametype);
        pi.productInfoBrandClock.setText(namebrand);
        pi.productInfoModel.setText(namemodel);
        pi.productInfoCondition.setText(namecondition);
        pi.productInfoManufactureDate.setText(manufacturedate);
        pi.productInfoDescription.setText(descriptionclock);
        pi.productInfoPrice.setText(price); 
        }   
    }//GEN-LAST:event_tableInfoMouseClicked
       private void fillTable(){
        try{
       this.tableInfo.setModel(controllerShCart.listshCartClocks(mainCont.getUsername()));
        this.tableInfo.revalidate();
        this.tableInfo.repaint();
        }catch(Exception e){
        }
    }
       
       
               private void fillShippingMethod(){
             
        try {
            ArrayList<String> listC = this.controllerShippingMethod.listInfoCombo();
            DefaultComboBoxModel listF = new DefaultComboBoxModel(listC.toArray());
            this.comboShipping.setModel(listF);

        } catch (Exception e) {
            System.out.println(e.toString());
        }

            }
       private void fillPaymentMethod(){
             
        try {
            ArrayList<String> listC = this.controllerPaymentMethod.listInfoCombo();
            DefaultComboBoxModel listF = new DefaultComboBoxModel(listC.toArray());
            this.comboPayment.setModel(listF);

        } catch (Exception e) {
            System.out.println(e.toString());
        }

            }
       private void calcTotal(){
           int count=0;
           
           for (int i=0;i<tableInfo.getRowCount();i++)
               count+=Integer.parseInt(tableInfo.getValueAt(i, 9 ).toString());
        this.totalLabel.setText(String.valueOf(count));
       }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buyButton1;
    private javax.swing.JComboBox<String> comboPayment;
    private javax.swing.JComboBox<String> comboShipping;
    private javax.swing.JButton deleteShCart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableInfo;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables
}
